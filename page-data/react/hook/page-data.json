{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/react/hook/",
    "result": {"data":{"cur":{"id":"e41b2e1e-7ed8-5d5f-b003-ab158ec4f7a2","html":"<h2 id=\"side-effect-란\" style=\"position:relative;\"><a href=\"#side-effect-%EB%9E%80\" aria-label=\"side effect 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Side Effect 란?</h2>\n<p>React 컴포넌트가 화면에 1차로 렌더링된 이후에 <U>비동기로 처리되어야 하는 부수적인 효과들</U>  <br /><br /></p>\n<h3 id=\"비동기로-처리되어야-하는-이유\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0%EB%A1%9C-%EC%B2%98%EB%A6%AC%EB%90%98%EC%96%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"비동기로 처리되어야 하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기로 처리되어야 하는 이유?</h3>\n<p>데이터를 가져오려고 외부 API를 호출할 때, 일단 화면에 렌더링할 수 있는 것은 1차로 렌더링하고 실제 데이터는 비동기로 가져오는 것이 권장된다.<br>\n이유는 연동된 API가 응답이 늦거나 없을 때 데미지(사용자의 답답함)를 최소화 시켜 사용자 경험 측면에서 유리하기 때문이다.  <br /><br /></p>\n<h2 id=\"react-hooks-란\" style=\"position:relative;\"><a href=\"#react-hooks-%EB%9E%80\" aria-label=\"react hooks 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Hooks 란?</h2>\n<p>Hooks는 리액트 v16.8에 새로 도입된 기능이다. 함수형태의 컴포넌트에서 사용되는 몇가시 기술을 Hook이라고 부른다.<br>\n함수형 컴포넌트에서도 <U>상태 관리를 할 수 있는 useState</U>, 그리고 <U>렌더링 직후 작업을 설정하는 useEffect</U> 등의 기능을 제공한다.  <br /><br /></p>\n<h3 id=\"잘-사용하고-있던-클래스형-컴포넌트에서-함수형-컴포넌트로-바꾸는-이유\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8D%98-%ED%81%B4%EB%9E%98%EC%8A%A4%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%B0%94%EA%BE%B8%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"잘 사용하고 있던 클래스형 컴포넌트에서 함수형 컴포넌트로 바꾸는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 사용하고 있던 클래스형 컴포넌트에서 함수형 컴포넌트로 바꾸는 이유?</h3>\n<p>React를 배우는 데 있어서 클래스는 큰 진입장벽이었다. 코드의 재사용성과 코드 구성을 어렵게 만들고, this의 사용이나 이벤트 핸들러의 등록 등 기본적인 JS문법 사항을 알아야 다룰 수 있기 때문이다. 또한 클래스는 잘 축소되지 않고, reloading이 깨지기 쉽고 신뢰하기 어렵게 만든다. 따라서 react의 최신 기술들이 클래스형 컴포넌트에 효과적으로 적용되지 않았다.</p>\n<ol>\n<li>클래스의 문법이 어렵다.</li>\n<li>축소가 어렵다.</li>\n<li>reloading의 신뢰성이 떨어진다.</li>\n<li>최신 기술의 적용이 효과적이지 않다.</li>\n</ol>\n<p>-> <U>이러한 클래스의 단점들을 함수형 컴포넌트로 해결할 수 있다. 하지만 클래스 컴포넌트의 장점인 state 사용이나 life cycle을 직접 다루는 등의 기능을 사용하지 못한다. 이를 해결하기 위해 Hook이 등장하였다.</U> <br />( Hook을 사용하는 이유 )</p>\n<br />\n<h2 id=\"hooks의-종류\" style=\"position:relative;\"><a href=\"#hooks%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"hooks의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hooks의 종류</h2>\n<ol>\n<li>useState()</li>\n</ol>\n<ul>\n<li>함수형 컴포넌트에서도 가변적인 상태를 지닐 수 있게 해준다.</li>\n<li>해당 함수의 인자에는 상태의 기본값이 들어간다.</li>\n</ul>\n<ol start=\"2\">\n<li>useEffect()</li>\n</ol>\n<ul>\n<li>컴포넌트가 렌더링될 때마다 특정 작업을 수행하도록 설정할 수 있다.</li>\n</ul>\n<ol start=\"3\">\n<li>useReducer()</li>\n</ol>\n<ul>\n<li>useState보다 더 다양한 컴포넌트 상황에 따라 다양한 상태를 다른 값으로 업데이트 해주고 싶을 때 사용한다.</li>\n<li>현재 상태, 업데이트를 위해 필요한 정보를 담은 액션 값을 전달받아 새로운 상태를 반환하는 함수이다. 반드시 불변성을 지켜줘야 한다.</li>\n<li>첫 번째 인자로 reducer 함수를 받고, 두 번째 인자로 해당 리듀서의 기본값을 넣어준다.</li>\n<li>이 Hook은 배열을 리턴하고, 첫 번째 인자가 상태고, 두 번째 인자가 dispatch 함수인 길이가 2인 배열을 리턴한다.</li>\n</ul>\n<ol start=\"4\">\n<li>useMemo()</li>\n</ol>\n<ul>\n<li>함수형 컴포넌트 내부에서 발생하는 연산을 최적화할 수 있다.</li>\n<li>렌더링하는 과정에서 특정 값이 바뀌었을 때만 연산을 실행하고, 원하는 값이 바뀌지 않았다면 이전에 연산했던 결과를 다시 사용하는 방식이다.</li>\n</ul>\n<ol start=\"5\">\n<li>useCallback()</li>\n</ol>\n<ul>\n<li>useMemo와 비슷하다. 주로 렌더링 성능을 최적화해야 하는 상황에 사용한다. 이벤트 핸들러 함수를 필요할 때만 생성할 수 있다.</li>\n<li>첫 번째 인자에는 생성하고 싶은 함수를, 두 번째 인자에는 배열을 넣는다. 이 배열에는 어떤 값이 바뀌었을 때 함수를 새로 생성해야 하는지 명시해야 한다.</li>\n<li>함수 내부에서 상태 값에 의존해야 할 때는 그 값을 반드시 두 번째 파라미터 안에 포함시켜 주어야 한다.</li>\n</ul>\n<ol start=\"6\">\n<li>useRef()</li>\n</ol>\n<ul>\n<li>함수형 컴포넌트에서 ref를 쉽게 사용할 수 있도록 한다.</li>\n<li>useRef를 통해 만든 객체 안의 current 값이 실제 엘리먼트를 가리킨다.</li>\n</ul>\n<p><br /><br /></p>\n<p>Refference: <a href=\"https://devbirdfeet.tistory.com/52\">https://devbirdfeet.tistory.com/52</a> <br />\n                     \n<a href=\"https://lelana.tistory.com/146\">https://lelana.tistory.com/146</a></p>\n<p><br /><br /><br /></p>","excerpt":"Side Effect 란? React 컴포넌트가 화면에 1차로 렌더링된 이후에 비동기로 처리되어야 하는 부수적인 효과들   비동기로 처리되어야 하는 이유? 데이터를 가져오려고 외부 API를 호출할 때, 일단 화면에 렌더링할 수 있는 것은 1차로 렌더링하고 실제 데이터는 비동기로 가져오는 것이 권장된다. 이유는 연동된 API가 응답이 늦거나 없을 때 데미지(사용자의 답답함)를 최소화 시켜 사용자 경험 측면에서 유리하기 때문이다.   React Hooks 란? Hooks는 리액트 v16.8에 새로 도입된 기능이다. 함수형태의 컴포넌트에서 사용되는 몇가시 기술을 Hook이라고 부른다. 함수형 컴포넌트에서도 상태 관리를 할 수 있는 useState, 그리고 렌더링 직후 작업을 설정하는 useEffect 등의 기능을 제공한다.   잘 사용하고 있던 클래스형 컴포넌트에서 함수형 컴포넌트로 바꾸는 이유? React를 배우는 데 있어서 클래스는 큰 진입장벽이었다. 코드의 재사용성과 코드 구성을 …","frontmatter":{"date":"December 15, 2021","title":"React Hook","categories":"tech-interview react","author":"펀코딩","emoji":"🔍"},"fields":{"slug":"/react/hook/"}},"next":{"id":"e31bf901-483a-554c-9e00-7a674be8a3c5","html":"<h2 id=\"webpack웹팩-이란\" style=\"position:relative;\"><a href=\"#webpack%EC%9B%B9%ED%8C%A9-%EC%9D%B4%EB%9E%80\" aria-label=\"webpack웹팩 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack(웹팩) 이란?</h2>\n<p>현대 Javascript Application의 Static Module Bundler<br>\n필요한 다수의 자바스크립트 파일을 하나의 자바스크립트 파일로 만들어 주는 것을 말한다.  <br /><br /></p>\n<h3 id=\"bundle번들-이란\" style=\"position:relative;\"><a href=\"#bundle%EB%B2%88%EB%93%A4-%EC%9D%B4%EB%9E%80\" aria-label=\"bundle번들 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bundle(번들) 이란?</h3>\n<p>소프트웨어 및 일부 하드웨어와 함께 작동하는 데 필요한 모든 것을 포함하는 Package  <br /><br /></p>\n<h2 id=\"webpack을-사용하는-이유\" style=\"position:relative;\"><a href=\"#webpack%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"webpack을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack을 사용하는 이유</h2>\n<p>연관되어 있는 자바스크립트 파일들을 하나의 파일로 묶어줘서 관리하기 편하다.<br>\n컴파일할 때, 여러 모듈들의 파일을 읽어오는데 걸리는 시간을 해결하기 위해 여러 파일을 하나의 파일로 번들링 해준다.<br>\n하나의 자바스크립트 파일로 만들어서 웹페이지 성능을 최적화 해준다.<br>\n다른 Module Bundler도 많이 존재하지만, performance가 우수하다.  <br /><br /></p>\n<h3 id=\"babel바벨-이란\" style=\"position:relative;\"><a href=\"#babel%EB%B0%94%EB%B2%A8-%EC%9D%B4%EB%9E%80\" aria-label=\"babel바벨 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel(바벨) 이란?</h3>\n<p>ES6+ 버전 이상의 자바스크립트나 JSX, 타입스크립트 코드를 하위 버전의 자바스크립트 코드로 변환 시켜 IE나 다른 브라우저 내에서 동작할 수 있도록 하는 트랜스 파일러  <br /><br /></p>\n<h3 id=\"babel을-사용하는-이유\" style=\"position:relative;\"><a href=\"#babel%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"babel을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel을 사용하는 이유</h3>\n<p>최신 브라우저에서 동작하는 기능을 다른 브라우저나 이전 버전의 브라우저에서 구현해야 하는 경우, 기능 자체를 생략하거나 단순화해야 하는 상황이 발생한다. 이런 이슈는 코드의 일관성을 해칠 수 있고, 협업 과정에서 또 다른 문제를 야기할 수 있다. 바벨은 이런 문제점을 해결하고 보완하기 위해 등장했다.<br>\n즉, 크로스 브라우징을 위해 사용한다.  <br /><br /></p>\n<h2 id=\"폴더-생성-및-초기화\" style=\"position:relative;\"><a href=\"#%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"폴더 생성 및 초기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폴더 생성 및 초기화</h2>\n<p>프로젝트 파일을 생성하고 package.json 파일 초기화</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> cra\n<span class=\"token builtin class-name\">cd</span> cra\n<span class=\"token function\">npm</span> init -y</code></pre></div>\n<hr />\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> src dist public</code></pre></div>\n<br />\n<ul>\n    <li>src : react 작업을 위한 폴더</li>\n    <li>dist : 번들링 결과물의 폴더</li>\n    <li>public : 정적 파일을 위한 폴더</li>\n</ul>\n<hr />\n<p>public 폴더에 <code class=\"language-text\">inhex.html</code> 파일 생성 후, 루트 <code class=\"language-text\">&lt;div></code>를 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> public\n<span class=\"token function\">touch</span> index.html</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> /<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> /<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>CRA 없이 리액트 개발 환경 구축<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<hr />\n<p>리액트 컴포넌트를 렌더링할 <code class=\"language-text\">index.js</code> 파일 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> src\n<span class=\"token function\">touch</span> index.js</code></pre></div>\n<hr />\n<h2 id=\"리액트-설치\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%84%A4%EC%B9%98\" aria-label=\"리액트 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 설치</h2>\n<p>리액트의 핵심 패키지들을 설치</p>\n<ul>\n    <li>react : 리액트 코어</li>\n    <li>react-dom : 리액트와 DOM을 연결</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> react react-dom</code></pre></div>\n<h2 id=\"바벨-설치\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EB%B2%A8-%EC%84%A4%EC%B9%98\" aria-label=\"바벨 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바벨 설치</h2>\n<p>리액트에서는 ES6와 JSX를 사용한다. 브라우저 호환성을 위해 ES6 => ES5, JSX => js로 트랜스 파일링을 해주는 바벨을 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @babel/core @babel/preset-react @babel/preset-env -D</code></pre></div>\n<ul>\n    <li>@babel/core : 바벨의 코어</li>\n    <li>@babel/present-react : 리액트 JSX를 트랜스파일링</li>\n    <li>@babel/present-env : ES6코드를 ES5로 트랜스파일링</li>\n</ul>\n<h3 id=\"설정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95\" aria-label=\"설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정</h3>\n<p>루트 경로에서 <code class=\"language-text\">babel.config.js</code>파일을 생성하고 프리셋들을 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"웹팩\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9\" aria-label=\"웹팩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩</h2>\n<p>모듈 번들러인 웹팩의 핵심 패키지들을 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> webpack webpack-cli webpack-dev-server -D</code></pre></div>\n<ul>\n    <li>webpack : 웹팩의 코어</li>\n    <li>webpack-cli : 웹팩을 커맨드라인에서 사용</li>\n    <li>webpack-dev-server : 웹팩을 메모리 상에 빌드하여 개발 서버를 구동</li>\n</ul>\n<h3 id=\"로더\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%8D%94\" aria-label=\"로더 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로더</h3>\n<p>웹팩 번들링에 필요한 로더를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> babel-loader style-loader css-loader file-loader -D</code></pre></div>\n<ul>\n    <li>babel-loader : JSX 및 ES6+ 문법을 트랜스 파일링</li>\n    <li>style-loader : 변환된 CSS 파일을 style 태그로 감싸서 도입 </li>\n    <li>css-loader : CSS 파일을 자바스크립트가 이해할 수 있도록 변환</li>\n    <li>file-loader : 이미지 및 폰트 등의 파일 로딩</li>\n</ul>\n<h3 id=\"플러그인\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8\" aria-label=\"플러그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인</h3>\n<p>웹팩 번들링 후 적용할 플러그인을 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> html-webpack-plugin clean-webpack-plugin mini-css-extract-plugin -D</code></pre></div>\n<ul>\n    <li>html-webpack-plugin : HTML 파일에 번들링된 자바스크립트 파일을 삽입해주고 번들링된 결과가 저장되는 폴더에 옮김</li>\n    <li>clean-webpack-plugin : 번들링을 할 때마다 이전 번들링 결과물 제거</li>\n    <li>mini-css-extract-plugin : css 파일로 변환해주는 플러그인</li>\n</ul>\n<h3 id=\"웹팩-설정\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9-%EC%84%A4%EC%A0%95\" aria-label=\"웹팩 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩 설정</h3>\n<p>루트 경로에 <code class=\"language-text\">webpack.config.js</code> 파일 생성</p>\n<ul>\n    <li>mode : development(개발용), production(배포용), none 3가지 모드가 존재함</li>\n    <li>entry : 웹팩을 실행할 대상 파일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n    <li>output : 웹팩의 결과물에 대한 정보를 입력하는 속성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 결과물 경로</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 결과물 파일명</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n    <li>resolve : 웹팩이 모듈을 처리하는 방식을 설정하는 속성으로 확장자를 생략해도 인식하게 만든다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<ul>\n    <li>devtool : source-map을 설정하는 부분으로 에러가 발생했을 때 번들링된 파일에서 어느 부분에 에러가 났는지를 쉽게 확인할 수 있게 해주는 도구</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'eval-cheap-source-map'</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n    <li>devServer : webpack-dev-server의 옵션 설정</li>\n</ul>\n<p><code class=\"language-text\">overlay</code> : 에러 발생 시 브라우저에 내용을 띄울지 설정<br>\n<code class=\"language-text\">hot</code> : 모듈의 변화만 자동으로 로드하는 HMR(Hot Module Replacement) 기능 활성화 설정<br>\n<code class=\"language-text\">writeToDisk</code> :  메모리 뿐만 아니라 파일도 만들것인지 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    devMiddleware<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      writeToDisk<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    client<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      overlay<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n    <li>modules, rules : 모듈에 적용할 로더들과 그 옵션들을 설정</li>\n</ul>\n<p><code class=\"language-text\">test</code> : 어떤 파일에 적용할지 확장자 작성<br>\n<code class=\"language-text\">exclude</code> : 로더에서 제외할 파일 설정<br>\n<code class=\"language-text\">loader</code> : 적용할 로더가 1개라면 <code class=\"language-text\">loader</code>로 설정<br>\n<code class=\"language-text\">use</code> : 적용할 로더가 2개 이상이라면 <code class=\"language-text\">use</code>배열로 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(js|jsx)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token string\">'/node_modules/'</span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// use: ['style-loader', 'css-loader'],</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>MiniCssExtractPlugin<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(jpeg|jpg)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token operator\">:</span> <span class=\"token string\">'file-loader'</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'[name].[ext]'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n    <li>플러그인 적용</li>\n</ul>\n<p>설치했던 플러그인을 불러와 설정해준다.<br>\nhtml-webpack=plugin의 <code class=\"language-text\">template</code>은 번들링 파일을 주입하고 번들링 폴더로 복사할 대상 HTML 파일을 명시하는 옵션</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> CleanWebpackPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./public/index.html'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> filename<span class=\"token operator\">:</span> <span class=\"token string\">'app.css'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n    <li>package.json script 작성</li>\n</ul>\n<p><code class=\"language-text\">--progress</code>옵션은 번들링 진행 상태를 보여준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server --progress &amp; open http://localhost:5000/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --pregress\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"리액트-컴포넌트-생성\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"리액트 컴포넌트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 컴포넌트 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> src\n<span class=\"token function\">touch</span> App.css App.jsx</code></pre></div>\n<ul>\n    <li>App.jsx</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./App.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">'container'</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n    <li>App.css</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">{</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">500</span>px<span class=\"token punctuation\">;</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">200</span>px<span class=\"token punctuation\">;</span>\n  margin<span class=\"token operator\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n  background<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> cover<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n    <li>root의 index.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDom <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\nReactDom<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"실행\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-label=\"실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행</h2>\n<p>package.json에 등록한 scripts 명령어로 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre></div>\n<p><br /><br /><br /></p>\n<p>Refference <br />\n<a href=\"https://velog.io/@yon3115/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%95%84%EC%88%98-Webpack%EC%9D%B4%EB%9E%80\">\nWebpack(웹팩) 이란?\n</a><br />\n<a href=\"https://velog.io/@ksh4820/CRA-%EC%97%86%EC%9D%B4-React-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">\nWebpack 설정하기\n</a></p>","frontmatter":{"date":"December 12, 2021","title":"Webpack(웹팩)","categories":"tech-interview javascript web","author":"펀코딩","emoji":"🔍"},"fields":{"slug":"/javascript/webpack/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://eungbin.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/react/hook/","nextSlug":"/javascript/webpack/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}