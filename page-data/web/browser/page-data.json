{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/web/browser/",
    "result": {"data":{"cur":{"id":"3260811c-9076-5608-9751-3798a6035aae","html":"<h2 id=\"웹-브라우저의-동작-순서\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%88%9C%EC%84%9C\" aria-label=\"웹 브라우저의 동작 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 브라우저의 동작 순서</h2>\n<ol>\n<li>사용자가 브라우저에 도메인 입력(ex. <a href=\"https://www.naver.com\">https://www.naver.com</a>)</li>\n<li>웹 브라우저는 DNS에 입력된 도메인의 IP 주소를 요청</li>\n<li>해당 IP주소에 해당하는 서버로 접근(이때, random sequence 번호를 가지고 접근)</li>\n<li>서버에서 브라우저에 번호에 1을 더하여 응답(random sequence + 1)</li>\n<li>브라우저에서 다시 서버에 1을 더하여 응답</li>\n<li>(3, 4, 5 과정을 3 Way-Handshake 라고 한다. 브라우저가 서버에게 자신의 존재를 알리고 -> 서버는 브라우저의 존재를 확인했다는 사실 + 자신의 존재를 알리는 신호를 브라우저에 보냄 -> 브라우저는 서버의 존재를 확인했다는 신호를 서버에 다시 보냄 ===> 위 세 과정을 통해 브라우저와 서버간의 TCP 연결이 성립된다.)</li>\n</ol>\n<h2 id=\"브라우저-렌더링-과정\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\" aria-label=\"브라우저 렌더링 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 렌더링 과정</h2>\n<p><br /><br /><br /></p>\n<p>Refference <br />\r\n<a href=\"https://www.youtube.com/watch?v=FQHNg9gCWpg\">\r\n웹 브라우저의 동작 순서(유튜브)\r\n</a></p>","excerpt":"웹 브라우저의 동작 순서 사용자가 브라우저에 도메인 입력(ex. https://www.naver.com) 웹 브라우저는 DNS에 입력된 도메인의 IP 주소를 요청 해당 IP주소에 해당하는 서버로 접근(이때, random sequence 번호를 가지고 접근) 서버에서 브라우저에 번호에 1을 더하여 응답(random sequence + 1) 브라우저에서 다시 서버에 1을 더하여 응답 (3, 4, 5 과정을 3 Way-Handshake 라고 한다. 브라우저가 서버에게 자신의 존재를 알리고 -> 서버는 브라우저의 존재를 확인했다는 사실 + 자신의 존재를 알리는 신호를 브라우저에 보냄 -> 브라우저는 서버의 존재를 확인했다는 신호를 서버에 다시 보냄 ===> 위 세 과정을 통해 브라우저와 서버간의 TCP 연결이 성립된다.) 브라우저 렌더링 과정  Refference \r\n\r\n웹 브라우저의 동작 순서(유튜브)","frontmatter":{"date":"May 03, 2022","title":"Web 브라우저의 동작 순서","categories":"tech-interview web","author":"Covy","emoji":"🔍"},"fields":{"slug":"/web/browser/"}},"next":{"id":"452cdc53-cb31-548a-8275-82a8237332fc","html":"<h2 id=\"web-storage\" style=\"position:relative;\"><a href=\"#web-storage\" aria-label=\"web storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Storage</h2>\n<p>HTML5에는 웹의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조인 Web Storage 스펙이 포함되어 있다. <br /><br />\r\nWeb Storage의 개념은 key/value 쌍으로 데이터를 저장하고 key를 기반으로 데이터를 조회하는 패턴이다. <br /><br />\r\n영구저장소(LocalStorage)와 임시저장소(SessionStorage)를 따로 두어 데이터의 지속성을 구분할 수 있어 환경에 맞게 선택이 가능하다. <br /><br /></p>\n<p>Web Storage는 기존 Cookie와 매우 유사한 개념이다. <br /><br />\r\n몇 가지 쿠키의 단점을 보완하기 위해 도입되었다. <br /><br /></p>\n<h3 id=\"web-storage와-cookie의-차이점\" style=\"position:relative;\"><a href=\"#web-storage%EC%99%80-cookie%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"web storage와 cookie의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Storage와 Cookie의 차이점</h3>\n<ul>\n<li>쿠키는 매번 서버로 전송된다.</li>\n</ul>\n<p>웹사이트에서 쿠키를 설정하면 이후 모든 웹 요청은 쿠키정보를 포함하여 서버로 전송된다.</p>\n<ul>\n<li>단순 문자열을 넘어 객체정보를 저장할 수 있다.</li>\n</ul>\n<p>문자열 기반 데이터이 외에 구조화된 객체를 저장할 수 있다.</p>\n<ul>\n<li>제한 용량이 쿠키에 비해 자유롭다.</li>\n</ul>\n<p>쿠키는 개수와 용량에 제한이 있다. 하나의 사이트에서 저장할 수 있는 최대 쿠키 수는 20개, 크기는 4KB이다.<br>\n이에 반해 Web Storage는 브라우저에 따라 다를 수 있지만 보통 5MB 이상이다.</p>\n<ul>\n<li>영구 데이터 저장이 가능하다.</li>\n</ul>\n<p>쿠키는 만료일자를 지정하게 되어 있어 언젠가 제거된다. 만료일자를 지정하지 않으면 세션 쿠키가 된다. 영구 쿠키를 원한다면 만료일자를 굉장히 멀게 설정하여 해결할 수 있다.<br>\nWeb Storage는 만료 기간의 설정이 없다. 즉, 한번 저장한 데이터는 영구적으로 존재한다.</p>\n<br />\n<h3 id=\"localstorage와-sessionstorage\" style=\"position:relative;\"><a href=\"#localstorage%EC%99%80-sessionstorage\" aria-label=\"localstorage와 sessionstorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LocalStorage와 SessionStorage</h3>\n<p>Web Storage는 데이터의 지속성과 관련하여 두 가지 용도의 저장소를 제공한다.  <br />\r\n기본적으로 Web Storage는 쿠키와 마찬가지로 사이트의 도메인 단위로 접근이 제한된다.<br>\n예를 들어 A도메인에서 저장한 데이터는 B 도메인에서 조회할 수 없다. (보안적인 측면)</p>\n<h4 id=\"localstorage\" style=\"position:relative;\"><a href=\"#localstorage\" aria-label=\"localstorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LocalStorage</h4>\n<p>저장한 데이터를 명시적으로 지우지 않는 이상 영구적으로 보관이 가능하다. 앞서 말한대로 도메인마다 별도로 로컬 스토리지가 생성된다. Windows 전역 객체의 LocalStorage라는 컬렉션을 통해 저장과 조회가 이루어진다.</p>\n<h4 id=\"sessionstorage\" style=\"position:relative;\"><a href=\"#sessionstorage\" aria-label=\"sessionstorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SessionStorage</h4>\n<p>SessionStorage는 데이터의 지속성과 액세스 범위에 특수한 제한이 존재한다. SessionStorage는 windows 전역 객체의 sessionStorage라는 컬렉션을 통해 저장과 조회가 이루어진다.</p>\n<p>Refference: <a href=\"https://velog.io/@ejchaid/localstorage-sessionstorage-cookie%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">https://velog.io/@ejchaid/localstorage-sessionstorage-cookie%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90</a></p>\n<p><br /><br /><br /></p>","frontmatter":{"date":"December 22, 2021","title":"LocalStorage, SessionStorage, Cookie","categories":"tech-interview web","author":"Covy","emoji":"🔍"},"fields":{"slug":"/web/storage/"}},"prev":{"id":"a512d27b-1796-5165-b758-a6c240de0e25","html":"<h2 id=\"lodash란\" style=\"position:relative;\"><a href=\"#lodash%EB%9E%80\" aria-label=\"lodash란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lodash란?</h2>\n<p>함수형 프로그래밍 패러다임을 사용하여 일반적인 프로그래밍 작업을 위한 유틸리티 기능을 제공하는 Javascript 라이브러리(Wikipedia)</p>\n<h2 id=\"debounce와-throttle\" style=\"position:relative;\"><a href=\"#debounce%EC%99%80-throttle\" aria-label=\"debounce와 throttle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce와 throttle</h2>\n<p>debounce와 throttle은 이벤트가 연속적으로 발생할 때, 콜백함수의 불필요한 실행을 줄여주는 기능을 제공한다. 서버로의 불필요한 요청(Request)을 줄일 수 있고, 불필요한 렌더링을 방지할 수 있어 컴포넌트 성능 개선에 도움이 된다. 또한, 외부 API를 호출해야 하는 경우, 과도한 서버 요청을 막아줄 수 있는 면에서 아주 중요한 기능을 한다고 생각한다.</p>\n<p>debounce는 이벤트가 종료된 뒤, 일정 시간 뒤에 콜백함수가 실행된다. throttle은 콜백 함수를 일정 주기마다 한 번 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">_<span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>wait<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>options<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascipt\"><pre class=\"language-javascipt\"><code class=\"language-javascipt\">_.throttle(func, [wait=0], [options={}])</code></pre></div>\n<p><br /><br /></p>\n<h3 id=\"debounce-적용-예시\" style=\"position:relative;\"><a href=\"#debounce-%EC%A0%81%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"debounce 적용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce 적용 예시</h3>\n<p><img src=\"https://user-images.githubusercontent.com/50731733/168414844-c97ae2dd-9c31-4a94-821f-9f8150173930.gif\" alt=\"beforeDebounce\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/50731733/168414968-8ce3c1a9-2115-4d82-b4fa-f345fef6f303.gif\" alt=\"afterDebounce\"></p>\n<p><br /><br /><br /></p>","frontmatter":{"date":"May 14, 2022","title":"컴포넌트 성능 향상(Javascript Lodash)","categories":"tech-interview javascript react","author":"Covy","emoji":"🔍"},"fields":{"slug":"/javascript/lodash/"}},"site":{"siteMetadata":{"siteUrl":"https://eungbin.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/web/browser/","nextSlug":"/web/storage/","prevSlug":"/javascript/lodash/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}