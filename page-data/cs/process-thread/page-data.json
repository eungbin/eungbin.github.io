{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/cs/process-thread/",
    "result": {"data":{"cur":{"id":"f174326e-08ec-5066-8909-6bf2262d5e02","html":"<h2 id=\"프로세스process-란\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EB%9E%80\" aria-label=\"프로세스process 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스(Process) 란?</h2>\n<p>운영체제로부터 자원을 할당받은 작업의 단위<br>\n프로그램이 메모리에 적재된 상태</p>\n<h2 id=\"스레드thread-란\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9Cthread-%EB%9E%80\" aria-label=\"스레드thread 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드(Thread) 란?</h2>\n<p>프로세스가 할당받은 자원을 이용하는 실행의 흐름 단위</p>\n<h3 id=\"프로그램--프로세스--스레드\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8--%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4--%EC%8A%A4%EB%A0%88%EB%93%9C\" aria-label=\"프로그램  프로세스  스레드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램 > 프로세스 > 스레드</h3>\n<h2 id=\"프로세스와-스레드의-차이\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"프로세스와 스레드의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스와 스레드의 차이</h2>\n<p>프로세스는 프로그램을 실행하는 순간 해당 파일이 컴퓨터 메모리에 적재되고, 이 동적인 상태의 프로그램을 프로세스라고 함.</p>\n<p>스레드는 프로세스를 구성하는 더 작은 실행 단위의 개념</p>\n<p>프로세스는 메모리에 적재될 때 운영체제로부터 독자적인 시스템 자원을 할당받는 반면, 스레드는 프로세스 내부에서 다른 메모리 영역을 같은 프로세스 내 다른 스레드와 공유한다.</p>\n<p><br /><br /><br /></p>","excerpt":"프로세스(Process) 란? 운영체제로부터 자원을 할당받은 작업의 단위 프로그램이 메모리에 적재된 상태 스레드(Thread) 란? 프로세스가 할당받은 자원을 이용하는 실행의 흐름 단위 프로그램 > 프로세스 > 스레드 프로세스와 스레드의 차이 프로세스는 프로그램을 실행하는 순간 해당 파일이 컴퓨터 메모리에 적재되고, 이 동적인 상태의 프로그램을 프로세스라고 함. 스레드는 프로세스를 구성하는 더 작은 실행 단위의 개념 프로세스는 메모리에 적재될 때 운영체제로부터 독자적인 시스템 자원을 할당받는 반면, 스레드는 프로세스 내부에서 다른 메모리 영역을 같은 프로세스 내 다른 스레드와 공유한다.","frontmatter":{"date":"December 02, 2021","title":"Process와 Thread","categories":"tech-interview cs","author":"펀코딩","emoji":"🔍"},"fields":{"slug":"/cs/process-thread/"}},"next":{"id":"64dd703f-65b3-5823-b606-461da32271c9","html":"<h2 id=\"javscript-closure클로저란\" style=\"position:relative;\"><a href=\"#javscript-closure%ED%81%B4%EB%A1%9C%EC%A0%80%EB%9E%80\" aria-label=\"javscript closure클로저란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javscript Closure(클로저)란?</h2>\n<p>독립적인 변수를 가리키는 함수</p>\n<h2 id=\"클로저의-원리\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EC%9D%98-%EC%9B%90%EB%A6%AC\" aria-label=\"클로저의 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저의 원리</h2>\n<p>함수A가 존재하고, 함수 A에서 선언된 1이라는 변수가 존재, 또한 함수 A 내부에 B라는 내부함수가 존재하고 B라는 내부함수에서 A함수에서 선언된 1이라는 변수를 참조, 이때 내부함수 B가 외부로 전달될 경우, A의 실행이 종료되어도 변수 1이 사라지지 않는다.</p>\n<h3 id=\"a의-실행이-종료되어도-변수-1이-사라지지-않는다---사이드-이펙트\" style=\"position:relative;\"><a href=\"#a%EC%9D%98-%EC%8B%A4%ED%96%89%EC%9D%B4-%EC%A2%85%EB%A3%8C%EB%90%98%EC%96%B4%EB%8F%84-%EB%B3%80%EC%88%98-1%EC%9D%B4-%EC%82%AC%EB%9D%BC%EC%A7%80%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4---%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9D%B4%ED%8E%99%ED%8A%B8\" aria-label=\"a의 실행이 종료되어도 변수 1이 사라지지 않는다   사이드 이펙트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>~~A의 실행이 종료되어도 변수 1이 사라지지 않는다 -> 사이드 이펙트</h3>\n<p>실행이 종료되어도 사라지지 않는다는 것은 메모리에 계속 남아있음을 뜻하고 이는 메모리 누수 현상이 발생할 수 있음을 뜻함<br>\n또한 메모리에 계속 남아있기에 필요에 의해 참조가 가능</p>\n<h3 id=\"메모리-누수란\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%88%84%EC%88%98%EB%9E%80\" aria-label=\"메모리 누수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 누수란?</h3>\n<p>프로그램이 필요하지 않은 메모리를 계속 점유하고 있는 현상</p>\n<h2 id=\"클로저를-사용하는-이유\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"클로저를 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저를 사용하는 이유</h2>\n<ol>\n<li>\n<p>불필요한 전역변수의 선언을 막아준다.</p>\n</li>\n<li>\n<p>private 변수를 사용하고 싶을 때 이용된다.</p>\n</li>\n</ol>\n<h2 id=\"클로저-사용의-단점\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80-%EC%82%AC%EC%9A%A9%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"클로저 사용의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저 사용의 단점</h2>\n<ol>\n<li>\n<p>메모리 누수 현상이 발생할 수 있다.</p>\n</li>\n<li>\n<p>새로운 Scope를 생성하여 내부 함수에 링크시키기에, function 자체의 스코프가 종료되기까지 내부함수가 메모리에 남아있어 퍼포먼스 손해 감수</p>\n</li>\n</ol>\n<p>-> 내부 함수에 링크시키기 때문에, function 자체의 스코프가 종료되기까지 내부함수가 메모리에 남아있어 퍼포먼스 손해 감수</p>\n<p><br /><br /><br /></p>","frontmatter":{"date":"November 29, 2021","title":"Javascript Closure(클로저)","categories":"tech-interview javascript","author":"펀코딩","emoji":"🔍"},"fields":{"slug":"/javascript/closure/"}},"prev":{"id":"95cbca88-e5e4-5a35-8865-5fa44d0e4148","html":"<h2 id=\"get-이란\" style=\"position:relative;\"><a href=\"#get-%EC%9D%B4%EB%9E%80\" aria-label=\"get 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET 이란?</h2>\n<p>GET은 지정된 리소스에서 데이터를 요청하는데 사용되는 HTTP Method  <br /><br /></p>\n<h2 id=\"get-요청의-특징\" style=\"position:relative;\"><a href=\"#get-%EC%9A%94%EC%B2%AD%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"get 요청의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET 요청의 특징</h2>\n<ol>\n<li>Browser history에 남아있다.</li>\n<li>북마크가 가능하다.</li>\n<li>민감한 데이터를 처리할 때 GET을 사용하지 않는다. (보안)</li>\n<li>데이터 요청에만 사용된다.</li>\n</ol>\n<br />\n<h2 id=\"post-란\" style=\"position:relative;\"><a href=\"#post-%EB%9E%80\" aria-label=\"post 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POST 란?</h2>\n<p>리소스를 생성/업데이트하기 위해 서버에 데이터를 보내는 데 사용된다.  <br /><br /></p>\n<h2 id=\"post-요청의-특징\" style=\"position:relative;\"><a href=\"#post-%EC%9A%94%EC%B2%AD%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"post 요청의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POST 요청의 특징</h2>\n<ol>\n<li>Browser history에 남아있지 않는다.</li>\n<li>북마크 불가능</li>\n<li>데이터 길이에 대한 제한이 없다.</li>\n</ol>\n<br />\n<h3 id=\"궁금증\" style=\"position:relative;\"><a href=\"#%EA%B6%81%EA%B8%88%EC%A6%9D\" aria-label=\"궁금증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>궁금증</h3>\n<ol>\n<li>Browser history가 무엇일까? (개발할 때 사용하던 history가 이 history인가?)</li>\n<li>북마크가 무엇일까? 흔히들 사용하는 북마크기능을 말하는 것일까?</li>\n<li>POST 요청은 데이터 길이에 제한이 없다고 하는데 아예 없는 것일까? (vs GET에 비해 비교적 프리한 것인가?)</li>\n</ol>\n<br />\n<h3 id=\"궁금한건-직접-해봐야지\" style=\"position:relative;\"><a href=\"#%EA%B6%81%EA%B8%88%ED%95%9C%EA%B1%B4-%EC%A7%81%EC%A0%91-%ED%95%B4%EB%B4%90%EC%95%BC%EC%A7%80\" aria-label=\"궁금한건 직접 해봐야지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>궁금한건 직접 해봐야지</h3>\n<p>Refference: <a href=\"https://www.w3schools.com/tags/ref_httpmethods.asp\">https://www.w3schools.com/tags/ref_httpmethods.asp</a></p>\n<p><br /><br /><br /></p>","frontmatter":{"date":"December 10, 2021","title":"GET과 POST","categories":"tech-interview web","author":"펀코딩","emoji":"🔍"},"fields":{"slug":"/web/getPost/"}},"site":{"siteMetadata":{"siteUrl":"https://eungbin.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/cs/process-thread/","nextSlug":"/javascript/closure/","prevSlug":"/web/getPost/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}